# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  MAVEN_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.class=standard -Dmaven.wagon.http.retryHandler.count=3

jobs:

  unit-tests:
    name: CI Units
    runs-on: ubuntu-latest
    timeout-minutes: 180

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: Tune Runner VM
        uses: ./.github/actions/tune-runner-vm

      - name: Detect changed files
        id:   changes
        uses: apache/pulsar-test-infra/paths-filter@master
        with:
          filters: .github/changes-filter.yaml

      - name: Check changed files
        id: check_changes
        run: echo "::set-output name=docs_only::${{ fromJSON(steps.changes.outputs.all_count) == fromJSON(steps.changes.outputs.docs_count) && fromJSON(steps.changes.outputs.docs_count) > 0 }}"

      - name: Cache local Maven repository
        if: ${{ steps.check_changes.outputs.docs_only != 'true' }}
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository/*/*/*
            !~/.m2/repository/org/apache/pulsar
          key: ${{ runner.os }}-m2-dependencies-core-modules-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-dependencies-core-modules-
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        if: ${{ steps.check_changes.outputs.docs_only != 'true' }}
        with:
          distribution: 'adopt'
          java-version: 11

      - name: Replace maven's wagon-http version
        if: ${{ steps.check_changes.outputs.docs_only != 'true' }}
        run: |
          MAVEN_HOME=$(mvn -v |grep 'Maven home:' | awk '{ print $3 }')
          if [ -d "$MAVEN_HOME" ]; then
            cd "$MAVEN_HOME/lib"
            rm wagon-http-*-shaded.jar
            curl -O https://repo1.maven.org/maven2/org/apache/maven/wagon/wagon-http/3.4.3/wagon-http-3.4.3-shaded.jar
          fi
      - name: run unit tests
        if: ${{ steps.check_changes.outputs.docs_only != 'true' }}
        run: 
          mvn -fn clean install test  # -Dgroups='quarantine' test
          
          
          # echo -n "Test Group : $TEST_GROUP"
          #$MVN_TEST_COMMAN -Dgroups='quarantine,flaky' -DexcludedGroups='' -DtestForkCount=2

      - name: package surefire artifacts
        #if: failure()
        run: |
          rm -rf artifacts
          mkdir artifacts
          find . -type d -name "*surefire*" -exec cp --parents -R {} artifacts/ \;
          zip -r artifacts.zip artifacts
      - uses: actions/upload-artifact@master
        name: upload surefire-artifacts
        #if: failure()
        with:
          name: surefire-artifacts
          path: artifacts.zip
          
     # - uses: actions/download-artifact@v2
     #   name: download surefire-artifacts
        #if: failure()
     #   with:
     #     name: surefire-artifacts
     #     path: artifacts.zip
