"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[15501],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return c}});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(a),c=r,k=d["".concat(p,".").concat(c)]||d[c]||m[c]||o;return a?n.createElement(k,i(i({ref:t},u),{},{components:a})):n.createElement(k,i({ref:t},u))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},77650:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var n=a(87462),r=a(63366),o=(a(67294),a(3905)),i=["components"],l={id:"administration-pulsar-manager",title:"Pulsar Manager",sidebar_label:"Pulsar Manager",original_id:"administration-pulsar-manager"},p=void 0,s={unversionedId:"administration-pulsar-manager",id:"version-2.6.2/administration-pulsar-manager",isDocsHomePage:!1,title:"Pulsar Manager",description:"Pulsar Manager is a web-based GUI management and monitoring tool that helps administrators and users manage and monitor tenants, namespaces, topics, subscriptions, brokers, clusters, and so on, and supports dynamic configuration of multiple environments.",source:"@site/versioned_docs/version-2.6.2/administration-pulsar-manager.md",sourceDirName:".",slug:"/administration-pulsar-manager",permalink:"/docs/2.6.2/administration-pulsar-manager",editUrl:"https://github.com/apache/pulsar/edit/master/site2/website-next/versioned_docs/version-2.6.2/administration-pulsar-manager.md",tags:[],version:"2.6.2",frontMatter:{id:"administration-pulsar-manager",title:"Pulsar Manager",sidebar_label:"Pulsar Manager",original_id:"administration-pulsar-manager"},sidebar:"version-2.6.2/docsSidebar",previous:{title:"Geo-replication",permalink:"/docs/2.6.2/administration-geo"},next:{title:"Pulsar statistics",permalink:"/docs/2.6.2/administration-stats"}},u=[{value:"Install",id:"install",children:[{value:"Set administrator account and password",id:"set-administrator-account-and-password",children:[]},{value:"Use custom databases",id:"use-custom-databases",children:[]},{value:"Enable JWT authentication",id:"enable-jwt-authentication",children:[]}]},{value:"Log in",id:"log-in",children:[]}],m={toc:u};function d(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Pulsar Manager is a web-based GUI management and monitoring tool that helps administrators and users manage and monitor tenants, namespaces, topics, subscriptions, brokers, clusters, and so on, and supports dynamic configuration of multiple environments."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"If you monitor your current stats with ",(0,o.kt)("a",{parentName:"p",href:"administration-dashboard"},"Pulsar dashboard"),", you can try to use Pulsar Manager instead. Pulsar dashboard is deprecated."))),(0,o.kt)("h2",{id:"install"},"Install"),(0,o.kt)("p",null,"The easiest way to use the Pulsar Manager is to run it inside a ",(0,o.kt)("a",{parentName:"p",href:"https://www.docker.com/products/docker"},"Docker")," container."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"\ndocker pull apachepulsar/pulsar-manager:v0.2.0\ndocker run -it \\\n    -p 9527:9527 -p 7750:7750 \\\n    -e SPRING_CONFIGURATION_FILE=/pulsar-manager/pulsar-manager/application.properties \\\n    apachepulsar/pulsar-manager:v0.2.0\n\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"SPRING_CONFIGURATION_FILE"),": Default configuration file for spring.")),(0,o.kt)("h3",{id:"set-administrator-account-and-password"},"Set administrator account and password"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},'\nCSRF_TOKEN=$(curl http://localhost:7750/pulsar-manager/csrf-token)\ncurl \\\n    -H \'X-XSRF-TOKEN: $CSRF_TOKEN\' \\\n    -H \'Cookie: XSRF-TOKEN=$CSRF_TOKEN;\' \\\n    -H "Content-Type: application/json" \\\n    -X PUT http://localhost:7750/pulsar-manager/users/superuser \\\n    -d \'{"name": "admin", "password": "apachepulsar", "description": "test", "email": "username@test.org"}\'\n\n')),(0,o.kt)("p",null,"You can find the docker image in the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar-manager/tree/master/docker"},"Docker Hub")," directory and build an image from the source code as well:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\ngit clone https://github.com/apache/pulsar-manager\ncd pulsar-manager/front-end\nnpm install --save\nnpm run build:prod\ncd ..\n./gradlew build -x test\ncd ..\ndocker build -f docker/Dockerfile --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` --build-arg VCS_REF=`latest` --build-arg VERSION=`latest` -t apachepulsar/pulsar-manager .\n\n')),(0,o.kt)("h3",{id:"use-custom-databases"},"Use custom databases"),(0,o.kt)("p",null,"If you have a large amount of data, you can use a custom database. The following is an example of PostgreSQL.   "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Initialize database and table structures using the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar-manager/tree/master/src/main/resources/META-INF/sql/postgresql-schema.sql"},"file"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Modify the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar-manager/blob/master/src/main/resources/application.properties"},"configuration file")," and add PostgreSQL configuration."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\nspring.datasource.driver-class-name=org.postgresql.Driver\nspring.datasource.url=jdbc:postgresql://127.0.0.1:5432/pulsar_manager\nspring.datasource.username=postgres\nspring.datasource.password=postgres\n\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Compile to generate a new executable jar package.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\n./gradlew build -x test\n\n")),(0,o.kt)("h3",{id:"enable-jwt-authentication"},"Enable JWT authentication"),(0,o.kt)("p",null,"If you want to turn on JWT authentication, configure the following parameters:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"backend.jwt.token"),": token for the superuser. You need to configure this parameter during cluster initialization."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"jwt.broker.token.mode"),": multiple modes of generating token, including PUBLIC, PRIVATE, and SECRET."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"jwt.broker.public.key"),": configure this option if you use the PUBLIC mode."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"jwt.broker.private.key"),": configure this option if you use the PRIVATE mode."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"jwt.broker.secret.key"),": configure this option if you use the SECRET mode.")),(0,o.kt)("p",null,"For more information, see ",(0,o.kt)("a",{parentName:"p",href:"http://pulsar.apache.org/docs/en/security-token-admin/"},"Token Authentication Admin of Pulsar"),"."),(0,o.kt)("p",null,"If you want to enable JWT authentication, use one of the following methods."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Method 1: use command-line tool")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\nwget https://dist.apache.org/repos/dist/release/pulsar/pulsar-manager/apache-pulsar-manager-0.2.0/apache-pulsar-manager-0.2.0-bin.tar.gz\ntar -zxvf apache-pulsar-manager-0.2.0-bin.tar.gz\ncd pulsar-manager\ntar -zxvf pulsar-manager.tar\ncd pulsar-manager\ncp -r ../dist ui\n./bin/pulsar-manager --redirect.host=http://localhost --redirect.port=9527 insert.stats.interval=600000 --backend.jwt.token=token --jwt.broker.token.mode=PRIVATE --jwt.broker.private.key=file:///path/broker-private.key --jwt.broker.public.key=file:///path/broker-public.key\n\n")),(0,o.kt)("p",null,"Firstly, ",(0,o.kt)("a",{parentName:"p",href:"#set-administrator-account-and-password"},"set the administrator account and password")),(0,o.kt)("p",null,"Secondly, log in to Pulsar manager through http://localhost:7750/ui/index.html."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Method 2: configure the application.properties file")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\nbackend.jwt.token=token\n\njwt.broker.token.mode=PRIVATE\njwt.broker.public.key=file:///path/broker-public.key\njwt.broker.private.key=file:///path/broker-private.key\n\nor \njwt.broker.token.mode=SECRET\njwt.broker.secret.key=file:///path/broker-secret.key\n\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Method 3: use Docker and enable token authentication.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"\nexport JWT_TOKEN=\"your-token\"\ndocker run -it -p 9527:9527 -p 7750:7750 -e REDIRECT_HOST=http://localhost -e REDIRECT_PORT=9527 -e DRIVER_CLASS_NAME=org.postgresql.Driver -e URL='jdbc:postgresql://127.0.0.1:5432/pulsar_manager' -e USERNAME=pulsar -e PASSWORD=pulsar -e LOG_LEVEL=DEBUG -e JWT_TOKEN=$JWT_TOKEN -v $PWD:/data apachepulsar/pulsar-manager:v0.2.0 /bin/sh\n\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"JWT_TOKEN"),": the token of superuser configured for the broker. It is generated by the ",(0,o.kt)("inlineCode",{parentName:"p"},"bin/pulsar tokens create --secret-key")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"bin/pulsar tokens create --private-key")," command.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"REDIRECT_HOST"),": the IP address of the front-end server.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"REDIRECT_PORT"),": the port of the front-end server.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"DRIVER_CLASS_NAME"),": the driver class name of the PostgreSQL database.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"URL"),": the JDBC URL of your PostgreSQL database, such as jdbc:postgresql://127.0.0.1:5432/pulsar_manager. The docker image automatically start a local instance of the PostgreSQL database.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"USERNAME"),": the username of PostgreSQL.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"PASSWORD"),": the password of PostgreSQL.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"LOG_LEVEL"),": the level of log.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Method 4: use Docker and turn on ",(0,o.kt)("strong",{parentName:"p"},"token authentication")," and ",(0,o.kt)("strong",{parentName:"p"},"token management")," by private key and public key."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\nexport JWT_TOKEN="your-token"\nexport PRIVATE_KEY="file:///pulsar-manager/secret/my-private.key"\nexport PUBLIC_KEY="file:///pulsar-manager/secret/my-public.key"\ndocker run -it -p 9527:9527 -p 7750:7750 -e REDIRECT_HOST=http://localhost -e REDIRECT_PORT=9527 -e DRIVER_CLASS_NAME=org.postgresql.Driver -e URL=\'jdbc:postgresql://127.0.0.1:5432/pulsar_manager\' -e USERNAME=pulsar -e PASSWORD=pulsar -e LOG_LEVEL=DEBUG -e JWT_TOKEN=$JWT_TOKEN -e PRIVATE_KEY=$PRIVATE_KEY -e PUBLIC_KEY=$PUBLIC_KEY -v $PWD:/data -v $PWD/secret:/pulsar-manager/secret apachepulsar/pulsar-manager:v0.2.0 /bin/sh\n\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"JWT_TOKEN"),": the token of superuser configured for the broker. It is generated by the ",(0,o.kt)("inlineCode",{parentName:"p"},"bin/pulsar tokens create --private-key")," command.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"PRIVATE_KEY"),": private key path mounted in container, generated by ",(0,o.kt)("inlineCode",{parentName:"p"},"bin/pulsar tokens create-key-pair")," command.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"PUBLIC_KEY"),": public key path mounted in container, generated by ",(0,o.kt)("inlineCode",{parentName:"p"},"bin/pulsar tokens create-key-pair")," command.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"$PWD/secret"),": the folder where the private key and public key generated by the ",(0,o.kt)("inlineCode",{parentName:"p"},"bin/pulsar tokens create-key-pair")," command are placed locally")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"REDIRECT_HOST"),": the IP address of the front-end server.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"REDIRECT_PORT"),": the port of the front-end server.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"DRIVER_CLASS_NAME"),": the driver class name of the PostgreSQL database.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"URL"),": the JDBC URL of your PostgreSQL database, such as jdbc:postgresql://127.0.0.1:5432/pulsar_manager. The docker image automatically start a local instance of the PostgreSQL database.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"USERNAME"),": the username of PostgreSQL.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"PASSWORD"),": the password of PostgreSQL.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"LOG_LEVEL"),": the level of log.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"Method 5: use Docker and turn on ",(0,o.kt)("strong",{parentName:"p"},"token authentication")," and ",(0,o.kt)("strong",{parentName:"p"},"token management")," by secret key."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\nexport JWT_TOKEN="your-token"\nexport SECRET_KEY="file:///pulsar-manager/secret/my-secret.key"\ndocker run -it -p 9527:9527 -p 7750:7750 -e REDIRECT_HOST=http://localhost -e REDIRECT_PORT=9527 -e DRIVER_CLASS_NAME=org.postgresql.Driver -e URL=\'jdbc:postgresql://127.0.0.1:5432/pulsar_manager\' -e USERNAME=pulsar -e PASSWORD=pulsar -e LOG_LEVEL=DEBUG -e JWT_TOKEN=$JWT_TOKEN -e SECRET_KEY=$SECRET_KEY -v $PWD:/data -v $PWD/secret:/pulsar-manager/secret apachepulsar/pulsar-manager:v0.2.0 /bin/sh\n\n')),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"JWT_TOKEN"),": the token of superuser configured for the broker. It is generated by the ",(0,o.kt)("inlineCode",{parentName:"p"},"bin/pulsar tokens create --secret-key")," command.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"SECRET_KEY"),": secret key path mounted in container, generated by ",(0,o.kt)("inlineCode",{parentName:"p"},"bin/pulsar tokens create-secret-key")," command.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"$PWD/secret"),": the folder where the secret key generated by the ",(0,o.kt)("inlineCode",{parentName:"p"},"bin/pulsar tokens create-secret-key")," command are placed locally")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"REDIRECT_HOST"),": the IP address of the front-end server.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"REDIRECT_PORT"),": the port of the front-end server.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"DRIVER_CLASS_NAME"),": the driver class name of the PostgreSQL database.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"URL"),": the JDBC URL of your PostgreSQL database, such as jdbc:postgresql://127.0.0.1:5432/pulsar_manager. The docker image automatically start a local instance of the PostgreSQL database.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"USERNAME"),": the username of PostgreSQL.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"PASSWORD"),": the password of PostgreSQL.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"LOG_LEVEL"),": the level of log.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"For more information about backend configurations, see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar-manager/blob/master/src/README"},"here"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"For more information about frontend configurations, see ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/apache/pulsar-manager/tree/master/front-end"},"here"),"."))),(0,o.kt)("h2",{id:"log-in"},"Log in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"#set-administrator-account-and-password"},"Set the administrator account and password"),"."),(0,o.kt)("p",null,"Visit http://localhost:9527 to log in."))}d.isMDXComponent=!0}}]);