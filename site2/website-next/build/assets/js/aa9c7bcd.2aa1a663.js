"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[79221],{3905:function(t,e,a){a.d(e,{Zo:function(){return s},kt:function(){return u}});var n=a(67294);function r(t,e,a){return e in t?Object.defineProperty(t,e,{value:a,enumerable:!0,configurable:!0,writable:!0}):t[e]=a,t}function l(t,e){var a=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),a.push.apply(a,n)}return a}function i(t){for(var e=1;e<arguments.length;e++){var a=null!=arguments[e]?arguments[e]:{};e%2?l(Object(a),!0).forEach((function(e){r(t,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(a,e))}))}return t}function p(t,e){if(null==t)return{};var a,n,r=function(t,e){if(null==t)return{};var a,n,r={},l=Object.keys(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||(r[a]=t[a]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(n=0;n<l.length;n++)a=l[n],e.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(t,a)&&(r[a]=t[a])}return r}var d=n.createContext({}),o=function(t){var e=n.useContext(d),a=e;return t&&(a="function"==typeof t?t(e):i(i({},e),t)),a},s=function(t){var e=o(t.components);return n.createElement(d.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},k=n.forwardRef((function(t,e){var a=t.components,r=t.mdxType,l=t.originalType,d=t.parentName,s=p(t,["components","mdxType","originalType","parentName"]),k=o(a),u=r,N=k["".concat(d,".").concat(u)]||k[u]||m[u]||l;return a?n.createElement(N,i(i({ref:e},s),{},{components:a})):n.createElement(N,i({ref:e},s))}));function u(t,e){var a=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=a.length,i=new Array(l);i[0]=k;var p={};for(var d in e)hasOwnProperty.call(e,d)&&(p[d]=e[d]);p.originalType=t,p.mdxType="string"==typeof t?t:r,i[1]=p;for(var o=2;o<l;o++)i[o]=a[o];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}k.displayName="MDXCreateElement"},23852:function(t,e,a){a.r(e),a.d(e,{frontMatter:function(){return p},contentTitle:function(){return d},metadata:function(){return o},toc:function(){return s},default:function(){return k}});var n=a(87462),r=a(63366),l=(a(67294),a(3905)),i=["components"],p={id:"io-cli",title:"Connector Admin CLI",sidebar_label:"CLI",original_id:"io-cli"},d=void 0,o={unversionedId:"io-cli",id:"version-2.7.1/io-cli",isDocsHomePage:!1,title:"Connector Admin CLI",description:"The pulsar-admin tool helps you manage Pulsar connectors.",source:"@site/versioned_docs/version-2.7.1/io-cli.md",sourceDirName:".",slug:"/io-cli",permalink:"/docs/2.7.1/io-cli",editUrl:"https://github.com/apache/pulsar/edit/master/site2/website-next/versioned_docs/version-2.7.1/io-cli.md",tags:[],version:"2.7.1",frontMatter:{id:"io-cli",title:"Connector Admin CLI",sidebar_label:"CLI",original_id:"io-cli"},sidebar:"version-2.7.1/docsSidebar",previous:{title:"Develop",permalink:"/docs/2.7.1/io-develop"},next:{title:"Overview",permalink:"/docs/2.7.1/sql-overview"}},s=[{value:"<code>sources</code>",id:"sources",children:[{value:"<code>create</code>",id:"create",children:[]},{value:"<code>update</code>",id:"update",children:[]},{value:"<code>delete</code>",id:"delete",children:[]},{value:"<code>get</code>",id:"get",children:[]},{value:"<code>status</code>",id:"status",children:[]},{value:"<code>list</code>",id:"list",children:[]},{value:"<code>stop</code>",id:"stop",children:[]},{value:"<code>start</code>",id:"start",children:[]},{value:"<code>restart</code>",id:"restart",children:[]},{value:"<code>localrun</code>",id:"localrun",children:[]},{value:"<code>available-sources</code>",id:"available-sources",children:[]},{value:"<code>reload</code>",id:"reload",children:[]}]},{value:"<code>sinks</code>",id:"sinks",children:[{value:"<code>create</code>",id:"create-1",children:[]},{value:"<code>update</code>",id:"update-1",children:[]},{value:"<code>delete</code>",id:"delete-1",children:[]},{value:"<code>get</code>",id:"get-1",children:[]},{value:"<code>status</code>",id:"status-1",children:[]},{value:"<code>list</code>",id:"list-1",children:[]},{value:"<code>stop</code>",id:"stop-1",children:[]},{value:"<code>start</code>",id:"start-1",children:[]},{value:"<code>restart</code>",id:"restart-1",children:[]},{value:"<code>localrun</code>",id:"localrun-1",children:[]},{value:"<code>available-sinks</code>",id:"available-sinks",children:[]},{value:"<code>reload</code>",id:"reload-1",children:[]}]}],m={toc:s};function k(t){var e=t.components,a=(0,r.Z)(t,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"pulsar-admin")," tool helps you manage Pulsar connectors."),(0,l.kt)("h2",{id:"sources"},(0,l.kt)("inlineCode",{parentName:"h2"},"sources")),(0,l.kt)("p",null,"An interface for managing Pulsar IO sources (ingress data into Pulsar)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources subcommands\n\n")),(0,l.kt)("p",null,"Subcommands are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"create"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"update"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"delete"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"get"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"status"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"list"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"stop"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"start"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"restart"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"localrun"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"available-sources"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"reload")))),(0,l.kt)("h3",{id:"create"},(0,l.kt)("inlineCode",{parentName:"h3"},"create")),(0,l.kt)("p",null,"Submit a Pulsar IO source connector to run in a Pulsar cluster."),(0,l.kt)("h4",{id:"usage"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources create options\n\n")),(0,l.kt)("h4",{id:"options"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-a"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--archive")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to the NAR archive for the source. ",(0,l.kt)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--classname")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's class name if ",(0,l.kt)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--cpu")),(0,l.kt)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per source instance (applicable only to Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--deserialization-classname")),(0,l.kt)("td",{parentName:"tr",align:null},"The SerDe classname for the source.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--destination-topic-name")),(0,l.kt)("td",{parentName:"tr",align:null},"The Pulsar topic to which data is sent.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--disk")),(0,l.kt)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per source instance (applicable only to Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"}," --parallelism")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's parallelism factor, that is, the number of source instances to run.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,l.kt)("td",{parentName:"tr",align:null},"The processing guarantees (also named as delivery semantics) applied to the source. A source connector receives messages from external system and writes messages to a Pulsar topic. The ",(0,l.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")," is used to ensure the processing guarantees for writing messages to the Pulsar topic. ",(0,l.kt)("br",null),"The available values are ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--ram")),(0,l.kt)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per source instance (applicable only to the process and Docker runtimes).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-st"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--schema-type")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema type.",(0,l.kt)("br",null)," Either a builtin schema (for example, AVRO and JSON) or custom schema class name to be used to encode messages emitted from source.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--source-config")),(0,l.kt)("td",{parentName:"tr",align:null},"Source config key/values.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--source-config-file")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the source's configuration.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-t"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--source-type")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's connector provider.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's tenant.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--producer-config")),(0,l.kt)("td",{parentName:"tr",align:null},"The custom producer configuration (as a JSON string).")))),(0,l.kt)("h3",{id:"update"},(0,l.kt)("inlineCode",{parentName:"h3"},"update")),(0,l.kt)("p",null,"Update a already submitted Pulsar IO source connector."),(0,l.kt)("h4",{id:"usage-1"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources update options\n\n")),(0,l.kt)("h4",{id:"options-1"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-a"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--archive")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to the NAR archive for the source. ",(0,l.kt)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--classname")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's class name if ",(0,l.kt)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--cpu")),(0,l.kt)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per source instance (applicable only to Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--deserialization-classname")),(0,l.kt)("td",{parentName:"tr",align:null},"The SerDe classname for the source.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--destination-topic-name")),(0,l.kt)("td",{parentName:"tr",align:null},"The Pulsar topic to which data is sent.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--disk")),(0,l.kt)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per source instance (applicable only to Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"}," --parallelism")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's parallelism factor, that is, the number of source instances to run.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,l.kt)("td",{parentName:"tr",align:null},"The processing guarantees (also named as delivery semantics) applied to the source. A source connector receives messages from external system and writes messages to a Pulsar topic. The ",(0,l.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")," is used to ensure the processing guarantees for writing messages to the Pulsar topic. ",(0,l.kt)("br",null),"The available values are ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--ram")),(0,l.kt)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per source instance (applicable only to the process and Docker runtimes).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-st"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--schema-type")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema type.",(0,l.kt)("br",null)," Either a builtin schema (for example, AVRO and JSON) or custom schema class name to be used to encode messages emitted from source.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--source-config")),(0,l.kt)("td",{parentName:"tr",align:null},"Source config key/values.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--source-config-file")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the source's configuration.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-t"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--source-type")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's connector provider. The ",(0,l.kt)("inlineCode",{parentName:"td"},"source-type")," parameter of the currently built-in connectors is determined by the setting of the ",(0,l.kt)("inlineCode",{parentName:"td"},"name")," parameter specified in the pulsar-io.yaml file.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's tenant.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--update-auth-data")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether or not to update the auth data.",(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"Default value: false."))))),(0,l.kt)("h3",{id:"delete"},(0,l.kt)("inlineCode",{parentName:"h3"},"delete")),(0,l.kt)("p",null,"Delete a Pulsar IO source connector."),(0,l.kt)("h4",{id:"usage-2"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources delete options\n\n")),(0,l.kt)("h4",{id:"option"},"Option"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.kt)("h3",{id:"get"},(0,l.kt)("inlineCode",{parentName:"h3"},"get")),(0,l.kt)("p",null,"Get the information about a Pulsar IO source connector."),(0,l.kt)("h4",{id:"usage-3"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources get options\n\n")),(0,l.kt)("h4",{id:"options-2"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.kt)("h3",{id:"status"},(0,l.kt)("inlineCode",{parentName:"h3"},"status")),(0,l.kt)("p",null,"Check the current status of a Pulsar Source."),(0,l.kt)("h4",{id:"usage-4"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources status options\n\n")),(0,l.kt)("h4",{id:"options-3"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.kt)("td",{parentName:"tr",align:null},"The source ID.",(0,l.kt)("br",null),"If ",(0,l.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulasr gets status of all instances.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.kt)("h3",{id:"list"},(0,l.kt)("inlineCode",{parentName:"h3"},"list")),(0,l.kt)("p",null,"List all running Pulsar IO source connectors."),(0,l.kt)("h4",{id:"usage-5"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources list options\n\n")),(0,l.kt)("h4",{id:"options-4"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.kt)("h3",{id:"stop"},(0,l.kt)("inlineCode",{parentName:"h3"},"stop")),(0,l.kt)("p",null,"Stop a source instance."),(0,l.kt)("h4",{id:"usage-6"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources stop options\n\n")),(0,l.kt)("h4",{id:"options-5"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.kt)("td",{parentName:"tr",align:null},"The source instanceID.",(0,l.kt)("br",null),"If ",(0,l.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar stops all instances.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.kt)("h3",{id:"start"},(0,l.kt)("inlineCode",{parentName:"h3"},"start")),(0,l.kt)("p",null,"Start a source instance."),(0,l.kt)("h4",{id:"usage-7"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources start options\n\n")),(0,l.kt)("h4",{id:"options-6"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.kt)("td",{parentName:"tr",align:null},"The source instanceID.",(0,l.kt)("br",null),"If ",(0,l.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar starts all instances.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.kt)("h3",{id:"restart"},(0,l.kt)("inlineCode",{parentName:"h3"},"restart")),(0,l.kt)("p",null,"Restart a source instance."),(0,l.kt)("h4",{id:"usage-8"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources restart options\n\n")),(0,l.kt)("h4",{id:"options-7"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.kt)("td",{parentName:"tr",align:null},"The source instanceID.",(0,l.kt)("br",null),"If ",(0,l.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar restarts all instances.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's tenant.")))),(0,l.kt)("h3",{id:"localrun"},(0,l.kt)("inlineCode",{parentName:"h3"},"localrun")),(0,l.kt)("p",null,"Run a Pulsar IO source connector locally rather than deploying it to the Pulsar cluster."),(0,l.kt)("h4",{id:"usage-9"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources localrun options\n\n")),(0,l.kt)("h4",{id:"options-8"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-a"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--archive")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to the NAR archive for the Source. ",(0,l.kt)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--broker-service-url")),(0,l.kt)("td",{parentName:"tr",align:null},"The URL for the Pulsar broker.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--classname")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's class name if ",(0,l.kt)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--client-auth-params")),(0,l.kt)("td",{parentName:"tr",align:null},"Client authentication parameter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--client-auth-plugin")),(0,l.kt)("td",{parentName:"tr",align:null},"Client authentication plugin using which function-process can connect to broker.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--cpu")),(0,l.kt)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per source instance (applicable only to the Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--deserialization-classname")),(0,l.kt)("td",{parentName:"tr",align:null},"The SerDe classname for the source.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--destination-topic-name")),(0,l.kt)("td",{parentName:"tr",align:null},"The Pulsar topic to which data is sent.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--disk")),(0,l.kt)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per source instance (applicable only to the Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--hostname-verification-enabled")),(0,l.kt)("td",{parentName:"tr",align:null},"Enable hostname verification.",(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"Default value: false"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The source\u2019s name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The source\u2019s namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--parallelism")),(0,l.kt)("td",{parentName:"tr",align:null},"The source\u2019s parallelism factor, that is, the number of source instances to run).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,l.kt)("td",{parentName:"tr",align:null},"The processing guarantees (also named as delivery semantics) applied to the source. A source connector receives messages from external system and writes messages to a Pulsar topic. The ",(0,l.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")," is used to ensure the processing guarantees for writing messages to the Pulsar topic. ",(0,l.kt)("br",null),"The available values are ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--ram")),(0,l.kt)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per source instance (applicable only to the Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-st"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--schema-type")),(0,l.kt)("td",{parentName:"tr",align:null},"The schema type.",(0,l.kt)("br",null)," Either a builtin schema (for example, AVRO and JSON) or custom schema class name to be used to encode messages emitted from source.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--source-config")),(0,l.kt)("td",{parentName:"tr",align:null},"Source config key/values.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--source-config-file")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the source\u2019s configuration.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--source-type")),(0,l.kt)("td",{parentName:"tr",align:null},"The source's connector provider.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The source\u2019s tenant.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tls-allow-insecure")),(0,l.kt)("td",{parentName:"tr",align:null},"Allow insecure tls connection.",(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"Default value: false"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tls-trust-cert-path")),(0,l.kt)("td",{parentName:"tr",align:null},"The tls trust cert file path.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--use-tls")),(0,l.kt)("td",{parentName:"tr",align:null},"Use tls connection.",(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"Default value: false"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--producer-config")),(0,l.kt)("td",{parentName:"tr",align:null},"The custom producer configuration (as a JSON string).")))),(0,l.kt)("h3",{id:"available-sources"},(0,l.kt)("inlineCode",{parentName:"h3"},"available-sources")),(0,l.kt)("p",null,"Get the list of Pulsar IO connector sources supported by Pulsar cluster."),(0,l.kt)("h4",{id:"usage-10"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources available-sources\n\n")),(0,l.kt)("h3",{id:"reload"},(0,l.kt)("inlineCode",{parentName:"h3"},"reload")),(0,l.kt)("p",null,"Reload the available built-in connectors."),(0,l.kt)("h4",{id:"usage-11"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sources reload\n\n")),(0,l.kt)("h2",{id:"sinks"},(0,l.kt)("inlineCode",{parentName:"h2"},"sinks")),(0,l.kt)("p",null,"An interface for managing Pulsar IO sinks (egress data from Pulsar)."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks subcommands\n\n")),(0,l.kt)("p",null,"Subcommands are:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"create"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"update"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"delete"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"get"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"status"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"list"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"stop"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"start"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"restart"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"localrun"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"available-sinks"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("inlineCode",{parentName:"p"},"reload")))),(0,l.kt)("h3",{id:"create-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"create")),(0,l.kt)("p",null,"Submit a Pulsar IO sink connector to run in a Pulsar cluster."),(0,l.kt)("h4",{id:"usage-12"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks create options\n\n")),(0,l.kt)("h4",{id:"options-9"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-a"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--archive")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to the archive file for the sink. ",(0,l.kt)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--auto-ack")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether or not the framework will automatically acknowledge messages.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--classname")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's class name if ",(0,l.kt)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--cpu")),(0,l.kt)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per sink instance (applicable only to Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--custom-schema-inputs")),(0,l.kt)("td",{parentName:"tr",align:null},"The map of input topics to schema types or class names (as a JSON string).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--custom-serde-inputs")),(0,l.kt)("td",{parentName:"tr",align:null},"The map of input topics to SerDe class names (as a JSON string).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--disk")),(0,l.kt)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per sink instance (applicable only to Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-i, --inputs")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's input topic or topics (multiple topics can be specified as a comma-separated list).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"}," --parallelism")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's parallelism factor, that is, the number of sink instances to run.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,l.kt)("td",{parentName:"tr",align:null},"The processing guarantees (also known as delivery semantics) applied to the sink. The ",(0,l.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")," implementation in Pulsar also relies on sink implementation. ",(0,l.kt)("br",null),"The available values are ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--ram")),(0,l.kt)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per sink instance (applicable only to the process and Docker runtimes).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--retain-ordering")),(0,l.kt)("td",{parentName:"tr",align:null},"Sink consumes and sinks messages in order.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--sink-config")),(0,l.kt)("td",{parentName:"tr",align:null},"sink config key/values.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--sink-config-file")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the sink's configuration.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-t"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--sink-type")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's connector provider. The ",(0,l.kt)("inlineCode",{parentName:"td"},"sink-type")," parameter of the currently built-in connectors is determined by the setting of the ",(0,l.kt)("inlineCode",{parentName:"td"},"name")," parameter specified in the pulsar-io.yaml file.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--subs-name")),(0,l.kt)("td",{parentName:"tr",align:null},"Pulsar source subscription name if user wants a specific subscription-name for input-topic consumer.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--timeout-ms")),(0,l.kt)("td",{parentName:"tr",align:null},"The message timeout in milliseconds.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--topics-pattern")),(0,l.kt)("td",{parentName:"tr",align:null},"TopicsPattern to consume from list of topics under a namespace that match the pattern. ",(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"--input")," and ",(0,l.kt)("inlineCode",{parentName:"td"},"--topics-Pattern")," are mutually exclusive. ",(0,l.kt)("br",null),"Add SerDe class name for a pattern in ",(0,l.kt)("inlineCode",{parentName:"td"},"--customSerdeInputs")," (supported for java fun only).")))),(0,l.kt)("h3",{id:"update-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"update")),(0,l.kt)("p",null,"Update a Pulsar IO sink connector."),(0,l.kt)("h4",{id:"usage-13"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks update options\n\n")),(0,l.kt)("h4",{id:"options-10"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-a"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--archive")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to the archive file for the sink. ",(0,l.kt)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--auto-ack")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether or not the framework will automatically acknowledge messages.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--classname")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's class name if ",(0,l.kt)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--cpu")),(0,l.kt)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per sink instance (applicable only to Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--custom-schema-inputs")),(0,l.kt)("td",{parentName:"tr",align:null},"The map of input topics to schema types or class names (as a JSON string).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--custom-serde-inputs")),(0,l.kt)("td",{parentName:"tr",align:null},"The map of input topics to SerDe class names (as a JSON string).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--disk")),(0,l.kt)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per sink instance (applicable only to Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-i, --inputs")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's input topic or topics (multiple topics can be specified as a comma-separated list).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"}," --parallelism")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's parallelism factor, that is, the number of sink instances to run.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,l.kt)("td",{parentName:"tr",align:null},"The processing guarantees (also known as delivery semantics) applied to the sink. The ",(0,l.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")," implementation in Pulsar also relies on sink implementation. ",(0,l.kt)("br",null),"The available values are ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--ram")),(0,l.kt)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per sink instance (applicable only to the process and Docker runtimes).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--retain-ordering")),(0,l.kt)("td",{parentName:"tr",align:null},"Sink consumes and sinks messages in order.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--sink-config")),(0,l.kt)("td",{parentName:"tr",align:null},"sink config key/values.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--sink-config-file")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the sink's configuration.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-t"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--sink-type")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's connector provider.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--subs-name")),(0,l.kt)("td",{parentName:"tr",align:null},"Pulsar source subscription name if user wants a specific subscription-name for input-topic consumer.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--timeout-ms")),(0,l.kt)("td",{parentName:"tr",align:null},"The message timeout in milliseconds.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--topics-pattern")),(0,l.kt)("td",{parentName:"tr",align:null},"TopicsPattern to consume from list of topics under a namespace that match the pattern. ",(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"--input")," and ",(0,l.kt)("inlineCode",{parentName:"td"},"--topics-Pattern")," are mutually exclusive. ",(0,l.kt)("br",null),"Add SerDe class name for a pattern in ",(0,l.kt)("inlineCode",{parentName:"td"},"--customSerdeInputs")," (supported for java fun only).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--update-auth-data")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether or not to update the auth data.",(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"Default value: false."))))),(0,l.kt)("h3",{id:"delete-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"delete")),(0,l.kt)("p",null,"Delete a Pulsar IO sink connector."),(0,l.kt)("h4",{id:"usage-14"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks delete options\n\n")),(0,l.kt)("h4",{id:"option-1"},"Option"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.kt)("h3",{id:"get-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"get")),(0,l.kt)("p",null,"Get the information about a Pulsar IO sink connector."),(0,l.kt)("h4",{id:"usage-15"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks get options\n\n")),(0,l.kt)("h4",{id:"options-11"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.kt)("h3",{id:"status-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"status")),(0,l.kt)("p",null,"Check the current status of a Pulsar sink."),(0,l.kt)("h4",{id:"usage-16"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks status options\n\n")),(0,l.kt)("h4",{id:"options-12"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink ID.",(0,l.kt)("br",null),"If ",(0,l.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulasr gets status of all instances.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.kt)("h3",{id:"list-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"list")),(0,l.kt)("p",null,"List all running Pulsar IO sink connectors."),(0,l.kt)("h4",{id:"usage-17"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks list options\n\n")),(0,l.kt)("h4",{id:"options-13"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.kt)("h3",{id:"stop-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"stop")),(0,l.kt)("p",null,"Stop a sink instance."),(0,l.kt)("h4",{id:"usage-18"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks stop options\n\n")),(0,l.kt)("h4",{id:"options-14"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink instanceID.",(0,l.kt)("br",null),"If ",(0,l.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar stops all instances.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.kt)("h3",{id:"start-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"start")),(0,l.kt)("p",null,"Start a sink instance."),(0,l.kt)("h4",{id:"usage-19"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks start options\n\n")),(0,l.kt)("h4",{id:"options-15"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink instanceID.",(0,l.kt)("br",null),"If ",(0,l.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar starts all instances.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.kt)("h3",{id:"restart-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"restart")),(0,l.kt)("p",null,"Restart a sink instance."),(0,l.kt)("h4",{id:"usage-20"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks restart options\n\n")),(0,l.kt)("h4",{id:"options-16"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--instance-id")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink instanceID.",(0,l.kt)("br",null),"If ",(0,l.kt)("inlineCode",{parentName:"td"},"instance-id")," is not provided, Pulsar restarts all instances.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's tenant.")))),(0,l.kt)("h3",{id:"localrun-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"localrun")),(0,l.kt)("p",null,"Run a Pulsar IO sink connector locally rather than deploying it to the Pulsar cluster."),(0,l.kt)("h4",{id:"usage-21"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks localrun options\n\n")),(0,l.kt)("h4",{id:"options-17"},"Options"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Flag"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-a"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--archive")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to the archive file for the sink. ",(0,l.kt)("br",null)," It also supports url-path (http/https/file ","[file protocol assumes that file already exists on worker host]",") from which worker can download the package.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--auto-ack")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether or not the framework will automatically acknowledge messages.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--broker-service-url")),(0,l.kt)("td",{parentName:"tr",align:null},"The URL for the Pulsar broker.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--classname")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's class name if ",(0,l.kt)("inlineCode",{parentName:"td"},"archive")," is file-url-path (file://).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--client-auth-params")),(0,l.kt)("td",{parentName:"tr",align:null},"Client authentication parameter.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--client-auth-plugin")),(0,l.kt)("td",{parentName:"tr",align:null},"Client authentication plugin using which function-process can connect to broker.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--cpu")),(0,l.kt)("td",{parentName:"tr",align:null},"The CPU (in cores) that needs to be allocated per sink instance (applicable only to the Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--custom-schema-inputs")),(0,l.kt)("td",{parentName:"tr",align:null},"The map of input topics to Schema types or class names (as a JSON string).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--max-redeliver-count")),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum number of times that a message is redelivered before being sent to the dead letter queue.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--dead-letter-topic")),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the dead letter topic where the failing messages are sent.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--custom-serde-inputs")),(0,l.kt)("td",{parentName:"tr",align:null},"The map of input topics to SerDe class names (as a JSON string).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--disk")),(0,l.kt)("td",{parentName:"tr",align:null},"The disk (in bytes) that needs to be allocated per sink instance (applicable only to the Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--hostname-verification-enabled")),(0,l.kt)("td",{parentName:"tr",align:null},"Enable hostname verification.",(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"Default value: false"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"-i"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"--inputs")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's input topic or topics (multiple topics can be specified as a comma-separated list).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--name")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink\u2019s name.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--namespace")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink\u2019s namespace.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--parallelism")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink\u2019s parallelism factor, that is, the number of sink instances to run).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")),(0,l.kt)("td",{parentName:"tr",align:null},"The processing guarantees (also known as delivery semantics) applied to the sink. The ",(0,l.kt)("inlineCode",{parentName:"td"},"--processing-guarantees")," implementation in Pulsar also relies on sink implementation. ",(0,l.kt)("br",null),"The available values are ATLEAST_ONCE, ATMOST_ONCE, EFFECTIVELY_ONCE.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--ram")),(0,l.kt)("td",{parentName:"tr",align:null},"The RAM (in bytes) that needs to be allocated per sink instance (applicable only to the Docker runtime).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--retain-ordering")),(0,l.kt)("td",{parentName:"tr",align:null},"Sink consumes and sinks messages in order.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--sink-config")),(0,l.kt)("td",{parentName:"tr",align:null},"sink config key/values.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--sink-config-file")),(0,l.kt)("td",{parentName:"tr",align:null},"The path to a YAML config file specifying the sink\u2019s configuration.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--sink-type")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink's connector provider.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--subs-name")),(0,l.kt)("td",{parentName:"tr",align:null},"Pulsar source subscription name if user wants a specific subscription-name for input-topic consumer.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tenant")),(0,l.kt)("td",{parentName:"tr",align:null},"The sink\u2019s tenant.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--timeout-ms")),(0,l.kt)("td",{parentName:"tr",align:null},"The message timeout in milliseconds.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--negative-ack-redelivery-delay-ms")),(0,l.kt)("td",{parentName:"tr",align:null},"The negatively-acknowledged message redelivery delay in milliseconds.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tls-allow-insecure")),(0,l.kt)("td",{parentName:"tr",align:null},"Allow insecure tls connection.",(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"Default value: false"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--tls-trust-cert-path")),(0,l.kt)("td",{parentName:"tr",align:null},"The tls trust cert file path.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--topics-pattern")),(0,l.kt)("td",{parentName:"tr",align:null},"TopicsPattern to consume from list of topics under a namespace that match the pattern. ",(0,l.kt)("br",null),(0,l.kt)("inlineCode",{parentName:"td"},"--input")," and ",(0,l.kt)("inlineCode",{parentName:"td"},"--topics-Pattern")," are mutually exclusive. ",(0,l.kt)("br",null),"Add SerDe class name for a pattern in ",(0,l.kt)("inlineCode",{parentName:"td"},"--customSerdeInputs")," (supported for java fun only).")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"--use-tls")),(0,l.kt)("td",{parentName:"tr",align:null},"Use tls connection.",(0,l.kt)("br",null),(0,l.kt)("strong",{parentName:"td"},"Default value: false"),".")))),(0,l.kt)("h3",{id:"available-sinks"},(0,l.kt)("inlineCode",{parentName:"h3"},"available-sinks")),(0,l.kt)("p",null,"Get the list of Pulsar IO connector sinks supported by Pulsar cluster."),(0,l.kt)("h4",{id:"usage-22"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks available-sinks\n\n")),(0,l.kt)("h3",{id:"reload-1"},(0,l.kt)("inlineCode",{parentName:"h3"},"reload")),(0,l.kt)("p",null,"Reload the available built-in connectors."),(0,l.kt)("h4",{id:"usage-23"},"Usage"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"\n$ pulsar-admin sinks reload\n\n")))}k.isMDXComponent=!0}}]);