"use strict";(self.webpackChunkwebsite_next=self.webpackChunkwebsite_next||[]).push([[85690],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return d}});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),o=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},m=function(e){var t=o(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},c=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),c=o(a),d=i,g=c["".concat(l,".").concat(d)]||c[d]||u[d]||s;return a?n.createElement(g,r(r({ref:t},m),{},{components:a})):n.createElement(g,r({ref:t},m))}));function d(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=a.length,r=new Array(s);r[0]=c;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:i,r[1]=p;for(var o=2;o<s;o++)r[o]=a[o];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}c.displayName="MDXCreateElement"},58215:function(e,t,a){var n=a(67294);t.Z=function(e){var t=e.children,a=e.hidden,i=e.className;return n.createElement("div",{role:"tabpanel",hidden:a,className:i},t)}},55064:function(e,t,a){a.d(t,{Z:function(){return o}});var n=a(67294),i=a(79443);var s=function(){var e=(0,n.useContext)(i.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},r=a(86010),p="tabItem_1uMI",l="tabItemActive_2DSg";var o=function(e){var t,a=e.lazy,i=e.block,o=e.defaultValue,m=e.values,u=e.groupId,c=e.className,d=n.Children.toArray(e.children),g=null!=m?m:d.map((function(e){return{value:e.props.value,label:e.props.label}})),k=null!=o?o:null==(t=d.find((function(e){return e.props.default})))?void 0:t.props.value,h=s(),v=h.tabGroupChoices,b=h.setTabGroupChoices,N=(0,n.useState)(k),T=N[0],f=N[1],y=[];if(null!=u){var I=v[u];null!=I&&I!==T&&g.some((function(e){return e.value===I}))&&f(I)}var S=function(e){var t=e.currentTarget,a=y.indexOf(t),n=g[a].value;f(n),null!=u&&(b(u,n),setTimeout((function(){var e,a,n,i,s,r,p,o;(e=t.getBoundingClientRect(),a=e.top,n=e.left,i=e.bottom,s=e.right,r=window,p=r.innerHeight,o=r.innerWidth,a>=0&&s<=o&&i<=p&&n>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(l),setTimeout((function(){return t.classList.remove(l)}),2e3))}),150))},P=function(e){var t,a=null;switch(e.key){case"ArrowRight":var n=y.indexOf(e.target)+1;a=y[n]||y[0];break;case"ArrowLeft":var i=y.indexOf(e.target)-1;a=y[i]||y[y.length-1]}null==(t=a)||t.focus()};return n.createElement("div",{className:"tabs-container"},n.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":i},c)},g.map((function(e){var t=e.value,a=e.label;return n.createElement("li",{role:"tab",tabIndex:T===t?0:-1,"aria-selected":T===t,className:(0,r.Z)("tabs__item",p,{"tabs__item--active":T===t}),key:t,ref:function(e){return y.push(e)},onKeyDown:P,onFocus:S,onClick:S},null!=a?a:t)}))),a?(0,n.cloneElement)(d.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):n.createElement("div",{className:"margin-vert--md"},d.map((function(e,t){return(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==T})}))))}},79443:function(e,t,a){var n=(0,a(67294).createContext)(void 0);t.Z=n},78236:function(e,t,a){a.r(t),a.d(t,{frontMatter:function(){return o},contentTitle:function(){return m},metadata:function(){return u},toc:function(){return c},default:function(){return g}});var n=a(87462),i=a(63366),s=(a(67294),a(3905)),r=a(55064),p=a(58215),l=["components"],o={id:"admin-api-topics",title:"Manage topics",sidebar_label:"Topics",original_id:"admin-api-topics"},m=void 0,u={unversionedId:"admin-api-topics",id:"version-2.7.1/admin-api-topics",isDocsHomePage:!1,title:"Manage topics",description:"Pulsar has persistent and non-persistent topics. Persistent topic is a logical endpoint for publishing and consuming messages. The topic name structure for persistent topics is:",source:"@site/versioned_docs/version-2.7.1/admin-api-topics.md",sourceDirName:".",slug:"/admin-api-topics",permalink:"/docs/2.7.1/admin-api-topics",editUrl:"https://github.com/apache/pulsar/edit/master/site2/website-next/versioned_docs/version-2.7.1/admin-api-topics.md",tags:[],version:"2.7.1",frontMatter:{id:"admin-api-topics",title:"Manage topics",sidebar_label:"Topics",original_id:"admin-api-topics"},sidebar:"version-2.7.1/docsSidebar",previous:{title:"Permissions",permalink:"/docs/2.7.1/admin-api-permissions"},next:{title:"Functions",permalink:"/docs/2.7.1/admin-api-functions"}},c=[{value:"Manage topic resources",id:"manage-topic-resources",children:[{value:"List of topics",id:"list-of-topics",children:[]},{value:"Grant permission",id:"grant-permission",children:[]},{value:"Get permission",id:"get-permission",children:[]},{value:"Revoke permission",id:"revoke-permission",children:[]},{value:"Delete topic",id:"delete-topic",children:[]},{value:"Unload topic",id:"unload-topic",children:[]},{value:"Get stats",id:"get-stats",children:[]},{value:"Get internal stats",id:"get-internal-stats",children:[]},{value:"Peek messages",id:"peek-messages",children:[]},{value:"Get message by ID",id:"get-message-by-id",children:[]},{value:"Skip messages",id:"skip-messages",children:[]},{value:"Skip all messages",id:"skip-all-messages",children:[]},{value:"Reset cursor",id:"reset-cursor",children:[]},{value:"Lookup of topic",id:"lookup-of-topic",children:[]},{value:"Get bundle",id:"get-bundle",children:[]},{value:"Get subscriptions",id:"get-subscriptions",children:[]},{value:"Last Message Id",id:"last-message-id",children:[]}]},{value:"Manage non-partitioned topics",id:"manage-non-partitioned-topics",children:[{value:"Create",id:"create",children:[]},{value:"Delete",id:"delete",children:[]},{value:"List",id:"list",children:[]},{value:"Stats",id:"stats",children:[]}]},{value:"Manage partitioned topics",id:"manage-partitioned-topics",children:[{value:"Create",id:"create-1",children:[]},{value:"Create missed partitions",id:"create-missed-partitions",children:[]},{value:"Get metadata",id:"get-metadata",children:[]},{value:"Update",id:"update",children:[]},{value:"Delete",id:"delete-1",children:[]},{value:"List",id:"list-1",children:[]},{value:"Stats",id:"stats-1",children:[]},{value:"Internal stats",id:"internal-stats",children:[]}]},{value:"Publish to partitioned topics",id:"publish-to-partitioned-topics",children:[{value:"Routing mode",id:"routing-mode",children:[]},{value:"Custom message router",id:"custom-message-router",children:[]},{value:"How to choose partitions when using a key",id:"how-to-choose-partitions-when-using-a-key",children:[]}]},{value:"Manage subscriptions",id:"manage-subscriptions",children:[{value:"Create subscription",id:"create-subscription",children:[]}]}],d={toc:c};function g(e){var t=e.components,a=(0,i.Z)(e,l);return(0,s.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"Pulsar has persistent and non-persistent topics. Persistent topic is a logical endpoint for publishing and consuming messages. The topic name structure for persistent topics is:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\npersistent://tenant/namespace/topic\n\n")),(0,s.kt)("p",null,"Non-persistent topics are used in applications that only consume real-time published messages and do not need persistent guarantee. In this way, it reduces message-publish latency by removing overhead of persisting messages. The topic name structure for non-persistent topics is:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\nnon-persistent://tenant/namespace/topic\n\n")),(0,s.kt)("h2",{id:"manage-topic-resources"},"Manage topic resources"),(0,s.kt)("p",null,"Whether it is persistent or non-persistent topic, you can obtain the topic resources through ",(0,s.kt)("inlineCode",{parentName:"p"},"pulsar-admin")," tool, REST API and Java."),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"In REST API, ",(0,s.kt)("inlineCode",{parentName:"p"},":schema")," stands for persistent or non-persistent. ",(0,s.kt)("inlineCode",{parentName:"p"},":tenant"),", ",(0,s.kt)("inlineCode",{parentName:"p"},":namespace"),", ",(0,s.kt)("inlineCode",{parentName:"p"},":x")," are variables, replace them with the real tenant, namespace, and ",(0,s.kt)("inlineCode",{parentName:"p"},"x")," names when using them.",(0,s.kt)("br",{parentName:"p"}),"\n","Take ",(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getList?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace")," as an example, to get the list of persistent topics in REST API, use ",(0,s.kt)("inlineCode",{parentName:"p"},"https://pulsar.apache.org/admin/v2/persistent/my-tenant/my-namespace"),". To get the list of non-persistent topics in REST API, use ",(0,s.kt)("inlineCode",{parentName:"p"},"https://pulsar.apache.org/admin/v2/non-persistent/my-tenant/my-namespace"),"."))),(0,s.kt)("h3",{id:"list-of-topics"},"List of topics"),(0,s.kt)("p",null,"You can get the list of topics under a given namespace in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics list \\\n  my-tenant/my-namespace\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getList?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString namespace = "my-tenant/my-namespace";\nadmin.topics().getList(namespace);\n\n')))),(0,s.kt)("h3",{id:"grant-permission"},"Grant permission"),(0,s.kt)("p",null,"You can grant permissions on a client role to perform specific actions on a given topic in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics grant-permission \\\n  --actions produce,consume --role application1 \\\n  persistent://test-tenant/ns1/tp1 \\\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/grantPermissionsOnTopic?version=2.7.1&apiVersion=v2"},"POST /admin/v2/:schema/:tenant/:namespace/:topic/permissions/:role"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nString role = "test-role";\nSet<AuthAction> actions  = Sets.newHashSet(AuthAction.produce, AuthAction.consume);\nadmin.topics().grantPermission(topic, role, actions);\n\n')))),(0,s.kt)("h3",{id:"get-permission"},"Get permission"),(0,s.kt)("p",null,"You can fetch permission in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'\n$ pulsar-admin topics permissions \\\n  persistent://test-tenant/ns1/tp1 \\\n\n{\n    "application1": [\n        "consume",\n        "produce"\n    ]\n}\n\n'))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getPermissionsOnTopic?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace/:topic/permissions"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nadmin.topics().getPermissions(topic);\n\n')))),(0,s.kt)("h3",{id:"revoke-permission"},"Revoke permission"),(0,s.kt)("p",null,"You can revoke a permission granted on a client role in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'\n$ pulsar-admin topics revoke-permission \\\n  --role application1 \\\n  persistent://test-tenant/ns1/tp1 \\\n\n{\n  "application1": [\n    "consume",\n    "produce"\n  ]\n}\n\n'))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/revokePermissionsOnTopic?version=2.7.1&apiVersion=v2"},"DELETE /admin/v2/:schema/:tenant/:namespace/:topic/permissions/:role"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nString role = "test-role";\nadmin.topics().revokePermissions(topic, role);\n\n')))),(0,s.kt)("h3",{id:"delete-topic"},"Delete topic"),(0,s.kt)("p",null,"You can delete a topic in the following ways. You cannot delete a topic if any active subscription or producers is connected to the topic."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics delete \\\n  persistent://test-tenant/ns1/tp1 \\\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/deleteTopic?version=2.7.1&apiVersion=v2"},"DELETE /admin/v2/:schema/:tenant/:namespace/:topic"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nadmin.topics().delete(topic);\n\n')))),(0,s.kt)("h3",{id:"unload-topic"},"Unload topic"),(0,s.kt)("p",null,"You can unload a topic in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics unload \\\n  persistent://test-tenant/ns1/tp1 \\\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/unloadTopic?version=2.7.1&apiVersion=v2"},"PUT /admin/v2/:schema/:tenant/:namespace/:topic/unload"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nadmin.topics().unload(topic);\n\n')))),(0,s.kt)("h3",{id:"get-stats"},"Get stats"),(0,s.kt)("p",null,"You can check the following statistics of a given non-partitioned topic."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgRateIn"),": The sum of all local and replication publishers' publish rates (msg/s).")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgThroughputIn"),": The sum of all local and replication publishers' publish rates (bytes/s).")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgRateOut"),": The sum of all local and replication consumers' dispatch rates(msg/s).")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgThroughputOut"),": The sum of all local and replication consumers' dispatch rates (bytes/s).")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"averageMsgSize"),": The average size (in bytes) of messages published within the last interval.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"storageSize"),": The sum of the ledgers' storage size for this topic. The space used to store the messages for the topic.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"publishers"),": The list of all local publishers into the topic. The list ranges from zero to thousands."),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgRateIn"),": The total rate of messages (msg/s) published by this publisher.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgThroughputIn"),": The total throughput (bytes/s) of the messages published by this publisher.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"averageMsgSize"),": The average message size in bytes from this publisher within the last interval.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"producerId"),": The internal identifier for this producer on this topic.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"producerName"),": The internal identifier for this producer, generated by the client library.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"address"),": The IP address and source port for the connection of this producer.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"connectedSince"),": The timestamp when this producer is created or reconnected last time.")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"subscriptions"),": The list of all local subscriptions to the topic."),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"my-subscription"),": The name of this subscription. It is defined by the client."),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgRateOut"),": The total rate of messages (msg/s) delivered on this subscription.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgThroughputOut"),": The total throughput (bytes/s) delivered on this subscription.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgBacklog"),": The number of messages in the subscription backlog.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"type"),": The subscription type.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgRateExpired"),": The rate at which messages were discarded instead of dispatched from this subscription due to TTL.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"lastExpireTimestamp"),": The timestamp of the last message expire execution.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"lastConsumedFlowTimestamp"),": The timestamp of the last flow command received. ")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"lastConsumedTimestamp"),": The latest timestamp of all the consumed timestamp of the consumers.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"lastAckedTimestamp"),": The latest timestamp of all the acked timestamp of the consumers.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"consumers"),": The list of connected consumers for this subscription."),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgRateOut"),": The total rate of messages (msg/s) delivered to the consumer.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgThroughputOut"),": The total throughput (bytes/s) delivered to the consumer.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"consumerName"),": The internal identifier for this consumer, generated by the client library.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"availablePermits"),": The number of messages that the consumer has space for in the client library's listen queue. ",(0,s.kt)("inlineCode",{parentName:"p"},"0")," means the client library's queue is full and ",(0,s.kt)("inlineCode",{parentName:"p"},"receive()")," isn't being called. A non-zero value means this consumer is ready for dispatched messages.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"unackedMessages"),": The number of unacknowledged messages for the consumer.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"blockedConsumerOnUnackedMsgs"),": The flag used to verify if the consumer is blocked due to reaching threshold of the unacknowledged messages.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"lastConsumedTimestamp"),": The timestamp when the consumer reads a message the last time. ")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"lastAckedTimestamp"),": The timestamp when the consumer acknowledges a message the last time.")))))))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"replication"),": This section gives the stats for cross-colo replication of this topic"),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgRateIn"),": The total rate (msg/s) of messages received from the remote cluster. ")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgThroughputIn"),": The total throughput (bytes/s) received from the remote cluster.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgRateOut"),": The total rate of messages (msg/s) delivered to the replication-subscriber.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgThroughputOut"),": The total throughput (bytes/s) delivered to the replication-subscriber.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"msgRateExpired"),": The total rate of messages (msg/s) expired.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"replicationBacklog"),": The number of messages pending to be replicated to remote cluster.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"connected"),": Whether the outbound replicator is connected.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"replicationDelayInSeconds"),": How long the oldest message has been waiting to be sent through the connection, if connected is ",(0,s.kt)("inlineCode",{parentName:"p"},"true"),".")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"inboundConnection"),": The IP and port of the broker in the remote cluster's publisher connection to this broker.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"inboundConnectedSince"),": The TCP connection being used to publish messages to the remote cluster. If there are no local publishers connected, this connection is automatically closed after a minute.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"outboundConnection"),": The address of the outbound replication connection.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"outboundConnectedSince"),": The timestamp of establishing outbound connection."))))),(0,s.kt)("p",null,"The following is an example of a topic status."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n  "msgRateIn": 4641.528542257553,\n  "msgThroughputIn": 44663039.74947473,\n  "msgRateOut": 0,\n  "msgThroughputOut": 0,\n  "averageMsgSize": 1232439.816728665,\n  "storageSize": 135532389160,\n  "publishers": [\n    {\n      "msgRateIn": 57.855383881403576,\n      "msgThroughputIn": 558994.7078932219,\n      "averageMsgSize": 613135,\n      "producerId": 0,\n      "producerName": null,\n      "address": null,\n      "connectedSince": null\n    }\n  ],\n  "subscriptions": {\n    "my-topic_subscription": {\n      "msgRateOut": 0,\n      "msgThroughputOut": 0,\n      "msgBacklog": 116632,\n      "type": null,\n      "msgRateExpired": 36.98245516804671,\n      "consumers": []\n    }\n  },\n  "replication": {}\n}\n\n')),(0,s.kt)("p",null,"To get the status of a topic, you can use the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics stats \\\n  persistent://test-tenant/ns1/tp1 \\\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getStats?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace/:topic/stats"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nadmin.topics().getStats(topic);\n\n')))),(0,s.kt)("h3",{id:"get-internal-stats"},"Get internal stats"),(0,s.kt)("p",null,"You can get the detailed statistics of a topic."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"entriesAddedCounter"),": Messages published since this broker loaded this topic.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"numberOfEntries"),": The total number of messages being tracked.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"totalSize"),": The total storage size in bytes of all messages.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"currentLedgerEntries"),": The count of messages written to the ledger that is currently open for writing.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"currentLedgerSize"),": The size in bytes of messages written to the ledger that is currently open for writing.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"lastLedgerCreatedTimestamp"),": The time when the last ledger is created.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"lastLedgerCreationFailureTimestamp:")," The time when the last ledger failed.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"waitingCursorsCount"),': The number of cursors that are "caught up" and waiting for a new message to be published.')),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"pendingAddEntriesCount"),": The number of messages that complete (asynchronous) write requests.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"lastConfirmedEntry"),": The ledgerid:entryid of the last message that is written successfully. If the entryid is ",(0,s.kt)("inlineCode",{parentName:"p"},"-1"),", then the ledger is open, yet no entries are written.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"state"),": The state of this ledger for writing. The state ",(0,s.kt)("inlineCode",{parentName:"p"},"LedgerOpened")," means that a ledger is open for saving published messages.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"ledgers"),": The ordered list of all ledgers for this topic holding messages."),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"ledgerId"),": The ID of this ledger.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"entries"),": The total number of entries belong to this ledger.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"size"),": The size of messages written to this ledger (in bytes).")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"offloaded"),": Whether this ledger is offloaded.")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"compactedLedger"),": The ledgers holding un-acked messages after topic compaction."),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"ledgerId"),": The ID of this ledger.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"entries"),": The total number of entries belong to this ledger.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"size"),": The size of messages written to this ledger (in bytes).")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"offloaded"),": Whether this ledger is offloaded. The value is ",(0,s.kt)("inlineCode",{parentName:"p"},"false")," for the compacted topic ledger.")))),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"cursors"),": The list of all cursors on this topic. Each subscription in the topic stats has a cursor."),(0,s.kt)("ul",{parentName:"li"},(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"markDeletePosition"),": All messages before the markDeletePosition are acknowledged by the subscriber.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"readPosition"),": The latest position of subscriber for reading message.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"waitingReadOp"),": This is true when the subscription has read the latest message published to the topic and is waiting for new messages to be published.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"pendingReadOps"),": The counter for how many outstanding read requests to the BookKeepers in progress.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"messagesConsumedCounter"),": The number of messages this cursor has acked since this broker loaded this topic.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"cursorLedger"),": The ledger being used to persistently store the current markDeletePosition.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"cursorLedgerLastEntry"),": The last entryid used to persistently store the current markDeletePosition.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"individuallyDeletedMessages"),": If acknowledges are being done out of order, the ranges of messages acknowledged between the markDeletePosition and the read-position shows.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"lastLedgerSwitchTimestamp"),": The last time the cursor ledger is rolled over.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"state"),": The state of the cursor ledger: ",(0,s.kt)("inlineCode",{parentName:"p"},"Open")," means you have a cursor ledger for saving updates of the markDeletePosition."))))),(0,s.kt)("p",null,"The following is an example of the detailed statistics of a topic."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n    "entriesAddedCounter": 20449518,\n    "numberOfEntries": 3233,\n    "totalSize": 331482,\n    "currentLedgerEntries": 3233,\n    "currentLedgerSize": 331482,\n    "lastLedgerCreatedTimestamp": "2016-06-29 03:00:23.825",\n    "lastLedgerCreationFailureTimestamp": null,\n    "waitingCursorsCount": 1,\n    "pendingAddEntriesCount": 0,\n    "lastConfirmedEntry": "324711539:3232",\n    "state": "LedgerOpened",\n    "ledgers": [\n        {\n            "ledgerId": 324711539,\n            "entries": 0,\n            "size": 0,\n            "offloaded": true\n        }\n    ],\n    "compactedLedger": {\n        "ledgerId": 324711540,\n        "entries": 10,\n        "size": 100,\n        "offloaded": false\n    },\n    "cursors": {\n        "my-subscription": {\n            "markDeletePosition": "324711539:3133",\n            "readPosition": "324711539:3233",\n            "waitingReadOp": true,\n            "pendingReadOps": 0,\n            "messagesConsumedCounter": 20449501,\n            "cursorLedger": 324702104,\n            "cursorLedgerLastEntry": 21,\n            "individuallyDeletedMessages": "[(324711539:3134\u2025324711539:3136], (324711539:3137\u2025324711539:3140], ]",\n            "lastLedgerSwitchTimestamp": "2016-06-29 01:30:19.313",\n            "state": "Open"\n        }\n    }\n}\n\n')),(0,s.kt)("p",null,"To get the internal status of a topic, you can use the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics stats-internal \\\n  persistent://test-tenant/ns1/tp1 \\\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getInternalStats?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace/:topic/internalStats"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nadmin.topics().getInternalStats(topic);\n\n')))),(0,s.kt)("h3",{id:"peek-messages"},"Peek messages"),(0,s.kt)("p",null,"You can peek a number of messages for a specific subscription of a given topic in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'\n$ pulsar-admin topics peek-messages \\\n  --count 10 --subscription my-subscription \\\n  persistent://test-tenant/ns1/tp1 \\\n\nMessage ID: 315674752:0\nProperties:  {  "X-Pulsar-publish-time" : "2015-07-13 17:40:28.451"  }\nmsg-payload\n\n'))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation?version=2.7.1/peekNthMessage&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace/:topic/subscription/:subName/position/:messagePosition"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nString subName = "my-subscription";\nint numMessages = 1;\nadmin.topics().peekMessages(topic, subName, numMessages);\n\n')))),(0,s.kt)("h3",{id:"get-message-by-id"},"Get message by ID"),(0,s.kt)("p",null,"You can fetch the message with the given ledger ID and entry ID in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ ./bin/pulsar-admin topics get-message-by-id \\\n  persistent://public/default/my-topic \\\n  -l 10 -e 0\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getMessageById?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace/:topic/ledger/:ledgerId/entry/:entryId"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nlong ledgerId = 10;\nlong entryId = 10;\nadmin.topics().getMessageById(topic, ledgerId, entryId);\n\n')))),(0,s.kt)("h3",{id:"skip-messages"},"Skip messages"),(0,s.kt)("p",null,"You can skip a number of messages for a specific subscription of a given topic in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics skip \\\n  --count 10 --subscription my-subscription \\\n  persistent://test-tenant/ns1/tp1 \\\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/skipMessages?version=2.7.1&apiVersion=v2"},"POST /admin/v2/:schema/:tenant/:namespace/:topic/subscription/:subName/skip/:numMessages"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nString subName = "my-subscription";\nint numMessages = 1;\nadmin.topics().skipMessages(topic, subName, numMessages);\n\n')))),(0,s.kt)("h3",{id:"skip-all-messages"},"Skip all messages"),(0,s.kt)("p",null,"You can skip all the old messages for a specific subscription of a given topic."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics skip-all \\\n  --subscription my-subscription \\\n  persistent://test-tenant/ns1/tp1 \\\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/skipAllMessages?version=2.7.1&apiVersion=v2"},"POST /admin/v2/:schema/:tenant/:namespace/:topic/subscription/:subName/skip_all"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nString subName = "my-subscription";\nadmin.topics().skipAllMessages(topic, subName);\n\n')))),(0,s.kt)("h3",{id:"reset-cursor"},"Reset cursor"),(0,s.kt)("p",null,"You can reset a subscription cursor position back to the position which is recorded X minutes before. It essentially calculates time and position of cursor at X minutes before and resets it at that position. You can reset the cursor in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics reset-cursor \\\n  --subscription my-subscription --time 10 \\\n  persistent://test-tenant/ns1/tp1 \\\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/resetCursor?version=2.7.1&apiVersion=v2"},"POST /admin/v2/:schema/:tenant/:namespace/:topic/subscription/:subName/resetcursor/:timestamp"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nString subName = "my-subscription";\nlong timestamp = 2342343L;\nadmin.topics().skipAllMessages(topic, subName, timestamp);\n\n')))),(0,s.kt)("h3",{id:"lookup-of-topic"},"Lookup of topic"),(0,s.kt)("p",null,"You can locate the broker URL which is serving the given topic in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'\n$ pulsar-admin topics lookup \\\n  persistent://test-tenant/ns1/tp1 \\\n\n "pulsar://broker1.org.com:4480"\n\n'))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#/?version=2.7.1&apiVersion=v2"},"GET /lookup/v2/topic/:schema/:tenant:namespace/:topic"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nadmin.lookup().lookupDestination(topic);\n\n')))),(0,s.kt)("h3",{id:"get-bundle"},"Get bundle"),(0,s.kt)("p",null,"You can check the range of the bundle which contains given topic in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'\n$ pulsar-admin topics bundle-range \\\n  persistent://test-tenant/ns1/tp1 \\\n\n "0x00000000_0xffffffff"\n\n'))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#/?version=2.7.1&apiVersion=v2"},"GET /lookup/v2/topic/:topic_domain/:tenant/:namespace/:topic/bundle"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nadmin.lookup().getBundleRange(topic);\n\n')))),(0,s.kt)("h3",{id:"get-subscriptions"},"Get subscriptions"),(0,s.kt)("p",null,"You can check all subscription names for a given topic in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics subscriptions \\\n  persistent://test-tenant/ns1/tp1 \\\n\n my-subscription\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getSubscriptions?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace/:topic/subscriptions"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nadmin.topics().getSubscriptions(topic);\n\n')))),(0,s.kt)("h3",{id:"last-message-id"},"Last Message Id"),(0,s.kt)("p",null,"You can get the last committed message ID for a persistent topic. It is available since 2.3.0 release."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\npulsar-admin topics last-message-id topic-name\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#/admin/v2/:schema/:tenant/:namespace/:topic/lastMessageId?version=2.7.1&apiVersion=v2"},"Get /admin/v2/:schema/:tenant/:namespace/:topic/lastMessageId?version=2.7.1"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-Java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nadmin.topics().getLastMessage(topic);\n\n')))),(0,s.kt)("h2",{id:"manage-non-partitioned-topics"},"Manage non-partitioned topics"),(0,s.kt)("p",null,"You can use Pulsar ",(0,s.kt)("a",{parentName:"p",href:"admin-api-overview"},"admin API")," to create, delete and check status of non-partitioned topics."),(0,s.kt)("h3",{id:"create"},"Create"),(0,s.kt)("p",null,"Non-partitioned topics must be explicitly created. When creating a new non-partitioned topic, you need to provide a name for the topic."),(0,s.kt)("p",null,"By default, 60 seconds after creation, topics are considered inactive and deleted automatically to avoid generating trash data. To disable this feature, set ",(0,s.kt)("inlineCode",{parentName:"p"},"brokerDeleteInactiveTopicsEnabled")," to ",(0,s.kt)("inlineCode",{parentName:"p"},"false"),". To change the frequency of checking inactive topics, set ",(0,s.kt)("inlineCode",{parentName:"p"},"brokerDeleteInactiveTopicsFrequencySeconds")," to a specific value."),(0,s.kt)("p",null,"For more information about the two parameters, see ",(0,s.kt)("a",{parentName:"p",href:"/docs/2.7.1/reference-configuration#broker"},"here"),"."),(0,s.kt)("p",null,"You can create non-partitioned topics in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("p",null,"When you create non-partitioned topics with the ",(0,s.kt)("a",{parentName:"p",href:"/docs/2.7.1/pulsar-admin#create-3"},(0,s.kt)("inlineCode",{parentName:"a"},"create"))," command, you need to specify the topic name as an argument."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ bin/pulsar-admin topics create \\\n  persistent://my-tenant/my-namespace/my-topic\n\n")),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"When you create a non-partitioned topic with the suffix '-partition-' followed by numeric value like 'xyz-topic-partition-x' for the topic name, if a partitioned topic with same suffix 'xyz-topic-partition-y' exists, then the numeric value(x) for the non-partitioned topic must be larger than the number of partitions(y) of the partitioned topic. Otherwise, you cannot create such a non-partitioned topic.")))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/createNonPartitionedTopic?version=2.7.1&apiVersion=v2"},"PUT /admin/v2/:schema/:tenant/:namespace/:topic"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topicName = "persistent://my-tenant/my-namespace/my-topic";\nadmin.topics().createNonPartitionedTopic(topicName);\n\n')))),(0,s.kt)("h3",{id:"delete"},"Delete"),(0,s.kt)("p",null,"You can delete non-partitioned topics in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ bin/pulsar-admin topics delete \\\n  persistent://my-tenant/my-namespace/my-topic\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/deleteTopic?version=2.7.1&apiVersion=v2"},"DELETE /admin/v2/:schema/:tenant/:namespace/:topic"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"\nadmin.topics().delete(topic);\n\n")))),(0,s.kt)("h3",{id:"list"},"List"),(0,s.kt)("p",null,"You can get the list of topics under a given namespace in the following ways.  "),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics list tenant/namespace\npersistent://tenant/namespace/topic1\npersistent://tenant/namespace/topic2\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getList?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"\nadmin.topics().getList(namespace);\n\n")))),(0,s.kt)("h3",{id:"stats"},"Stats"),(0,s.kt)("p",null,"You can check the current statistics of a given topic. The following is an example. For description of each stats, refer to ",(0,s.kt)("a",{parentName:"p",href:"#get-stats"},"get stats"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n  "msgRateIn": 4641.528542257553,\n  "msgThroughputIn": 44663039.74947473,\n  "msgRateOut": 0,\n  "msgThroughputOut": 0,\n  "averageMsgSize": 1232439.816728665,\n  "storageSize": 135532389160,\n  "publishers": [\n    {\n      "msgRateIn": 57.855383881403576,\n      "msgThroughputIn": 558994.7078932219,\n      "averageMsgSize": 613135,\n      "producerId": 0,\n      "producerName": null,\n      "address": null,\n      "connectedSince": null\n    }\n  ],\n  "subscriptions": {\n    "my-topic_subscription": {\n      "msgRateOut": 0,\n      "msgThroughputOut": 0,\n      "msgBacklog": 116632,\n      "type": null,\n      "msgRateExpired": 36.98245516804671,\n      "consumers": []\n    }\n  },\n  "replication": {}\n}\n\n')),(0,s.kt)("p",null,"You can check the current statistics of a given topic and its connected producers and consumers in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics stats \\\n  persistent://test-tenant/namespace/topic \\\n  --get-precise-backlog\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getStats?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace/:topic/stats"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"\nadmin.topics().getStats(topic, false /* is precise backlog */);\n\n")))),(0,s.kt)("h2",{id:"manage-partitioned-topics"},"Manage partitioned topics"),(0,s.kt)("p",null,"You can use Pulsar ",(0,s.kt)("a",{parentName:"p",href:"admin-api-overview"},"admin API")," to create, update, delete and check status of partitioned topics."),(0,s.kt)("h3",{id:"create-1"},"Create"),(0,s.kt)("p",null,"Partitioned topics must be explicitly created. When creating a new partitioned topic, you need to provide a name and the number of partitions for the topic."),(0,s.kt)("p",null,"By default, 60 seconds after creation, topics are considered inactive and deleted automatically to avoid generating trash data. To disable this feature, set ",(0,s.kt)("inlineCode",{parentName:"p"},"brokerDeleteInactiveTopicsEnabled")," to ",(0,s.kt)("inlineCode",{parentName:"p"},"false"),". To change the frequency of checking inactive topics, set ",(0,s.kt)("inlineCode",{parentName:"p"},"brokerDeleteInactiveTopicsFrequencySeconds")," to a specific value."),(0,s.kt)("p",null,"For more information about the two parameters, see ",(0,s.kt)("a",{parentName:"p",href:"/docs/2.7.1/reference-configuration#broker"},"here"),"."),(0,s.kt)("p",null,"You can create partitioned topics in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("p",null,"When you create partitioned topics with the ",(0,s.kt)("a",{parentName:"p",href:"/docs/2.7.1/pulsar-admin#create-partitioned-topic"},(0,s.kt)("inlineCode",{parentName:"a"},"create-partitioned-topic")),"\ncommand, you need to specify the topic name as an argument and the number of partitions using the ",(0,s.kt)("inlineCode",{parentName:"p"},"-p")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"--partitions")," flag."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ bin/pulsar-admin topics create-partitioned-topic \\\n  persistent://my-tenant/my-namespace/my-topic \\\n  --partitions 4\n\n")),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"If a non-partitioned topic with the suffix '-partition-' followed by a numeric value like 'xyz-topic-partition-10', you can not create a partitioned topic with name 'xyz-topic', because the partitions of the partitioned topic could override the existing non-partitioned topic. To create such partitioned topic, you have to delete that non-partitioned topic first.")))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/createPartitionedTopic?version=2.7.1&apiVersion=v2"},"PUT /admin/v2/:schema/:tenant/:namespace/:topic/partitions"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topicName = "persistent://my-tenant/my-namespace/my-topic";\nint numPartitions = 4;\nadmin.topics().createPartitionedTopic(topicName, numPartitions);\n\n')))),(0,s.kt)("h3",{id:"create-missed-partitions"},"Create missed partitions"),(0,s.kt)("p",null,"When topic auto-creation is disabled, and you have a partitioned topic without any partitions, you can use the ",(0,s.kt)("a",{parentName:"p",href:"/docs/2.7.1/pulsar-admin#create-missed-partitions"},(0,s.kt)("inlineCode",{parentName:"a"},"create-missed-partitions"))," command to create partitions for the topic."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("p",null,"You can create missed partitions with the ",(0,s.kt)("a",{parentName:"p",href:"/docs/2.7.1/pulsar-admin#create-missed-partitions"},(0,s.kt)("inlineCode",{parentName:"a"},"create-missed-partitions"))," command and specify the topic name as an argument."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ bin/pulsar-admin topics create-missed-partitions \\\n  persistent://my-tenant/my-namespace/my-topic \\\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/createMissedPartitions?version=2.7.1&apiVersion=v2"},"POST /admin/v2/:schema/:tenant/:namespace/:topic"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topicName = "persistent://my-tenant/my-namespace/my-topic";\nadmin.topics().createMissedPartitions(topicName);\n\n')))),(0,s.kt)("h3",{id:"get-metadata"},"Get metadata"),(0,s.kt)("p",null,"Partitioned topics are associated with metadata, you can view it as a JSON object. The following metadata field is available."),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"left"},"Field"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"partitions")),(0,s.kt)("td",{parentName:"tr",align:"left"},"The number of partitions into which the topic is divided.")))),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("p",null,"You can check the number of partitions in a partitioned topic with the ",(0,s.kt)("a",{parentName:"p",href:"/docs/2.7.1/pulsar-admin#get-partitioned-topic-metadata"},(0,s.kt)("inlineCode",{parentName:"a"},"get-partitioned-topic-metadata"))," subcommand. "),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},'\n$ pulsar-admin topics get-partitioned-topic-metadata \\\n  persistent://my-tenant/my-namespace/my-topic\n{\n  "partitions": 4\n}\n\n'))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getPartitionedMetadata?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace/:topic/partitions"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topicName = "persistent://my-tenant/my-namespace/my-topic";\nadmin.topics().getPartitionedTopicMetadata(topicName);\n\n')))),(0,s.kt)("h3",{id:"update"},"Update"),(0,s.kt)("p",null,"You can update the number of partitions for an existing partitioned topic ",(0,s.kt)("em",{parentName:"p"},"if")," the topic is non-global. However, you can only add the partition number. Decrementing the number of partitions would delete the topic, which is not supported in Pulsar."),(0,s.kt)("p",null,"Producers and consumers can find the newly created partitions automatically."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("p",null,"You can update partitioned topics with the ",(0,s.kt)("a",{parentName:"p",href:"/docs/2.7.1/pulsar-admin#update-partitioned-topic"},(0,s.kt)("inlineCode",{parentName:"a"},"update-partitioned-topic"))," command."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics update-partitioned-topic \\\n  persistent://my-tenant/my-namespace/my-topic \\\n  --partitions 8\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/updatePartitionedTopic?version=2.7.1&apiVersion=v2"},"POST /admin/v2/:schema/:tenant/:cluster/:namespace/:destination/partitions"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"\nadmin.topics().updatePartitionedTopic(topic, numPartitions);\n\n")))),(0,s.kt)("h3",{id:"delete-1"},"Delete"),(0,s.kt)("p",null,"You can delete partitioned topics with the ",(0,s.kt)("a",{parentName:"p",href:"/docs/2.7.1/pulsar-admin#delete-partitioned-topic"},(0,s.kt)("inlineCode",{parentName:"a"},"delete-partitioned-topic"))," command, REST API and Java. "),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ bin/pulsar-admin topics delete-partitioned-topic \\\n  persistent://my-tenant/my-namespace/my-topic\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/deletePartitionedTopic?version=2.7.1&apiVersion=v2"},"DELETE /admin/v2/:schema/:topic/:namespace/:destination/partitions"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"\nadmin.topics().delete(topic);\n\n")))),(0,s.kt)("h3",{id:"list-1"},"List"),(0,s.kt)("p",null,"You can get the list of topics under a given namespace in the following ways.  "),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics list tenant/namespace\npersistent://tenant/namespace/topic1\npersistent://tenant/namespace/topic2\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getPartitionedTopicList?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"\nadmin.topics().getList(namespace);\n\n")))),(0,s.kt)("h3",{id:"stats-1"},"Stats"),(0,s.kt)("p",null,"You can check the current statistics of a given partitioned topic. The following is an example. For description of each stats, refer to ",(0,s.kt)("a",{parentName:"p",href:"#get-stats"},"get stats"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n  "msgRateIn" : 999.992947159793,\n  "msgThroughputIn" : 1070918.4635439808,\n  "msgRateOut" : 0.0,\n  "msgThroughputOut" : 0.0,\n  "bytesInCounter" : 270318763,\n  "msgInCounter" : 252489,\n  "bytesOutCounter" : 0,\n  "msgOutCounter" : 0,\n  "averageMsgSize" : 1070.926056966454,\n  "msgChunkPublished" : false,\n  "storageSize" : 270316646,\n  "backlogSize" : 200921133,\n  "publishers" : [ {\n    "msgRateIn" : 999.992947159793,\n    "msgThroughputIn" : 1070918.4635439808,\n    "averageMsgSize" : 1070.3333333333333,\n    "chunkedMessageRate" : 0.0,\n    "producerId" : 0\n  } ],\n  "subscriptions" : {\n    "test" : {\n      "msgRateOut" : 0.0,\n      "msgThroughputOut" : 0.0,\n      "bytesOutCounter" : 0,\n      "msgOutCounter" : 0,\n      "msgRateRedeliver" : 0.0,\n      "chuckedMessageRate" : 0,\n      "msgBacklog" : 144318,\n      "msgBacklogNoDelayed" : 144318,\n      "blockedSubscriptionOnUnackedMsgs" : false,\n      "msgDelayed" : 0,\n      "unackedMessages" : 0,\n      "msgRateExpired" : 0.0,\n      "lastExpireTimestamp" : 0,\n      "lastConsumedFlowTimestamp" : 0,\n      "lastConsumedTimestamp" : 0,\n      "lastAckedTimestamp" : 0,\n      "consumers" : [ ],\n      "isDurable" : true,\n      "isReplicated" : false\n    }\n  },\n  "replication" : { },\n  "metadata" : {\n    "partitions" : 3\n  },\n  "partitions" : { }\n}\n\n')),(0,s.kt)("p",null,"You can check the current statistics of a given partitioned topic and its connected producers and consumers in the following ways. "),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics partitioned-stats \\\n  persistent://test-tenant/namespace/topic \\\n  --per-partition\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getPartitionedStats?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace/:topic/partitioned-stats"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"\nadmin.topics().getPartitionedStats(topic, true /* per partition */, false /* is precise backlog */);\n\n")))),(0,s.kt)("h3",{id:"internal-stats"},"Internal stats"),(0,s.kt)("p",null,"You can check the detailed statistics of a topic. The following is an example. For description of each stats, refer to ",(0,s.kt)("a",{parentName:"p",href:"#get-internal-stats"},"get internal stats"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'\n{\n  "entriesAddedCounter": 20449518,\n  "numberOfEntries": 3233,\n  "totalSize": 331482,\n  "currentLedgerEntries": 3233,\n  "currentLedgerSize": 331482,\n  "lastLedgerCreatedTimestamp": "2016-06-29 03:00:23.825",\n  "lastLedgerCreationFailureTimestamp": null,\n  "waitingCursorsCount": 1,\n  "pendingAddEntriesCount": 0,\n  "lastConfirmedEntry": "324711539:3232",\n  "state": "LedgerOpened",\n  "ledgers": [\n    {\n      "ledgerId": 324711539,\n      "entries": 0,\n      "size": 0\n    }\n  ],\n  "cursors": {\n    "my-subscription": {\n      "markDeletePosition": "324711539:3133",\n      "readPosition": "324711539:3233",\n      "waitingReadOp": true,\n      "pendingReadOps": 0,\n      "messagesConsumedCounter": 20449501,\n      "cursorLedger": 324702104,\n      "cursorLedgerLastEntry": 21,\n      "individuallyDeletedMessages": "[(324711539:3134\u2025324711539:3136], (324711539:3137\u2025324711539:3140], ]",\n      "lastLedgerSwitchTimestamp": "2016-06-29 01:30:19.313",\n      "state": "Open"\n    }\n  }\n}\n\n')),(0,s.kt)("p",null,"You can get the internal stats for the partitioned topic in the following ways."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\n$ pulsar-admin topics stats-internal \\\n  persistent://test-tenant/namespace/topic\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getInternalStats?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace/:topic/internalStats"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"\nadmin.topics().getInternalStats(topic);\n\n")))),(0,s.kt)("h2",{id:"publish-to-partitioned-topics"},"Publish to partitioned topics"),(0,s.kt)("p",null,"By default, Pulsar topics are served by a single broker, which limits the maximum throughput of a topic. ",(0,s.kt)("em",{parentName:"p"},"Partitioned topics")," can span multiple brokers and thus allow for higher throughput. "),(0,s.kt)("p",null,"You can publish to partitioned topics using Pulsar client libraries. When publishing to partitioned topics, you must specify a routing mode. If you do not specify any routing mode when you create a new producer, the round robin routing mode is used. "),(0,s.kt)("h3",{id:"routing-mode"},"Routing mode"),(0,s.kt)("p",null,"You can specify the routing mode in the ProducerConfiguration object that you use to configure your producer. The routing mode determines which partition(internal topic) that each message should be published to."),(0,s.kt)("p",null,"The following ",(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/api/client/org/apache/pulsar/client/api/MessageRoutingMode"},"MessageRoutingMode")," options are available."),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"left"},"Mode"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"RoundRobinPartition")),(0,s.kt)("td",{parentName:"tr",align:"left"},"If no key is provided, the producer publishes messages across all partitions in round-robin policy to achieve the maximum throughput. Round-robin is not done per individual message, round-robin is set to the same boundary of batching delay to ensure that batching is effective. If a key is specified on the message, the partitioned producer hashes the key and assigns message to a particular partition. This is the default mode.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"SinglePartition")),(0,s.kt)("td",{parentName:"tr",align:"left"},"If no key is provided, the producer picks a single partition randomly and publishes all messages into that partition. If a key is specified on the message, the partitioned producer hashes the key and assigns message to a particular partition.")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},(0,s.kt)("inlineCode",{parentName:"td"},"CustomPartition")),(0,s.kt)("td",{parentName:"tr",align:"left"},"Use custom message router implementation that is called to determine the partition for a particular message. You can create a custom routing mode by using the Java client and implementing the ",(0,s.kt)("a",{parentName:"td",href:"https://pulsar.incubator.apache.org/api/client/org/apache/pulsar/client/api/MessageRouter"},"MessageRouter")," interface.")))),(0,s.kt)("p",null,"The following is an example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString pulsarBrokerRootUrl = "pulsar://localhost:6650";\nString topic = "persistent://my-tenant/my-namespace/my-topic";\n\nPulsarClient pulsarClient = PulsarClient.builder().serviceUrl(pulsarBrokerRootUrl).build();\nProducer<byte[]> producer = pulsarClient.newProducer()\n        .topic(topic)\n        .messageRoutingMode(MessageRoutingMode.SinglePartition)\n        .create();\nproducer.send("Partitioned topic message".getBytes());\n\n')),(0,s.kt)("h3",{id:"custom-message-router"},"Custom message router"),(0,s.kt)("p",null,"To use a custom message router, you need to provide an implementation of the ",(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/api/client/org/apache/pulsar/client/api/MessageRouter"},"MessageRouter")," interface, which has just one ",(0,s.kt)("inlineCode",{parentName:"p"},"choosePartition")," method:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"\npublic interface MessageRouter extends Serializable {\n    int choosePartition(Message msg);\n}\n\n")),(0,s.kt)("p",null,"The following router routes every message to partition 10:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"\npublic class AlwaysTenRouter implements MessageRouter {\n    public int choosePartition(Message msg) {\n        return 10;\n    }\n}\n\n")),(0,s.kt)("p",null,"With that implementation, you can send"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString pulsarBrokerRootUrl = "pulsar://localhost:6650";\nString topic = "persistent://my-tenant/my-cluster-my-namespace/my-topic";\n\nPulsarClient pulsarClient = PulsarClient.builder().serviceUrl(pulsarBrokerRootUrl).build();\nProducer<byte[]> producer = pulsarClient.newProducer()\n        .topic(topic)\n        .messageRouter(new AlwaysTenRouter())\n        .create();\nproducer.send("Partitioned topic message".getBytes());\n\n')),(0,s.kt)("h3",{id:"how-to-choose-partitions-when-using-a-key"},"How to choose partitions when using a key"),(0,s.kt)("p",null,"If a message has a key, it supersedes the round robin routing policy. The following example illustrates how to choose the partition when using a key."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},"\n// If the message has a key, it supersedes the round robin routing policy\n        if (msg.hasKey()) {\n            return signSafeMod(hash.makeHash(msg.getKey()), topicMetadata.numPartitions());\n        }\n\n        if (isBatchingEnabled) { // if batching is enabled, choose partition on `partitionSwitchMs` boundary.\n            long currentMs = clock.millis();\n            return signSafeMod(currentMs / partitionSwitchMs + startPtnIdx, topicMetadata.numPartitions());\n        } else {\n            return signSafeMod(PARTITION_INDEX_UPDATER.getAndIncrement(this), topicMetadata.numPartitions());\n        }\n\n")),(0,s.kt)("h2",{id:"manage-subscriptions"},"Manage subscriptions"),(0,s.kt)("p",null,"You can use ",(0,s.kt)("a",{parentName:"p",href:"admin-api-overview"},"Pulsar admin API")," to create, check, and delete subscriptions."),(0,s.kt)("h3",{id:"create-subscription"},"Create subscription"),(0,s.kt)("p",null,"You can create a subscription for a topic using one of the following methods."),(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\npulsar-admin topics create-subscription \\\n--subscription my-subscription \\\npersistent://test-tenant/ns1/tp1\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/createSubscriptions?version=2.7.1&apiVersion=v2"},"PUT /admin/v2/persistent/:tenant/:namespace/:topic/subscription/:subscription"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nString subscriptionName = "my-subscription";\nadmin.topics().createSubscription(topic, subscriptionName, MessageId.latest);\n\n')))),"### Get subscription You can check all subscription names for a given topic using one of the following methods.",(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\npulsar-admin topics subscriptions \\\npersistent://test-tenant/ns1/tp1 \\\nmy-subscription\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/getSubscriptions?version=2.7.1&apiVersion=v2"},"GET /admin/v2/:schema/:tenant/:namespace/:topic/subscriptions"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nadmin.topics().getSubscriptions(topic);\n\n')))),"### Unsubscribe subscription When a subscription does not process messages any more, you can unsubscribe it using one of the following methods.",(0,s.kt)(r.Z,{defaultValue:"pulsar-admin",values:[{label:"pulsar-admin",value:"pulsar-admin"},{label:"REST API",value:"REST API"},{label:"Java",value:"Java"}],mdxType:"Tabs"},(0,s.kt)(p.Z,{value:"pulsar-admin",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-shell"},"\npulsar-admin topics unsubscribe \\\n--subscription my-subscription \\\npersistent://test-tenant/ns1/tp1\n\n"))),(0,s.kt)(p.Z,{value:"REST API",mdxType:"TabItem"},(0,s.kt)("p",null,(0,s.kt)("a",{parentName:"p",href:"https://pulsar.incubator.apache.org/admin-rest-api#operation/deleteSubscription?version=2.7.1&apiVersion=v2"},"DELETE /admin/v2/namespaces/:tenant/:namespace/:topic/subscription/:subscription"))),(0,s.kt)(p.Z,{value:"Java",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-java"},'\nString topic = "persistent://my-tenant/my-namespace/my-topic";\nString subscriptionName = "my-subscription";\nadmin.topics().deleteSubscription(topic, subscriptionName);\n\n')))))}g.isMDXComponent=!0},86010:function(e,t,a){function n(e){var t,a,i="";if("string"==typeof e||"number"==typeof e)i+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(a=n(e[t]))&&(i&&(i+=" "),i+=a);else for(t in e)e[t]&&(i&&(i+=" "),i+=t);return i}function i(){for(var e,t,a=0,i="";a<arguments.length;)(e=arguments[a++])&&(t=n(e))&&(i&&(i+=" "),i+=t);return i}a.d(t,{Z:function(){return i}})}}]);